"use strict";
var observable_1 = require("data/observable");
var MainViewModel = (function (_super) {
    __extends(MainViewModel, _super);
    function MainViewModel() {
        var _this = _super.call(this) || this;
        _this.myItems = [
            { name: 'apple', quantity: 42 },
            { name: 'banana', quantity: 7 },
            { name: 'pineapple', quantity: 3 },
            { name: 'appricote', quantity: 9 },
            { name: 'pear', quantity: 5 },
            { name: 'plum', quantity: 11 },
            { name: 'strawberry', quantity: 1 },
            { name: 'blueberry', quantity: 0 },
            { name: 'appricote', quantity: 9 },
            { name: 'pear', quantity: 5 },
            { name: 'plum', quantity: 11 },
            { name: 'apple', quantity: 42 },
            { name: 'banana', quantity: 7 },
            { name: 'pineapple', quantity: 3 },
            { name: 'strawberry', quantity: 1 },
            { name: 'blueberry', quantity: 0 },
            { name: 'appricote', quantity: 9 },
            { name: 'pear', quantity: 5 },
            { name: 'plum', quantity: 11 },
            { name: 'strawberry', quantity: 1 },
            { name: 'blueberry', quantity: 0 },
            { name: 'appricote', quantity: 9 },
            { name: 'pear', quantity: 5 },
            { name: 'plum', quantity: 11 }
        ];
        // Initialize default values.
        _this._counter = 42;
        _this.updateMessage();
        return _this;
    }
    Object.defineProperty(MainViewModel.prototype, "message", {
        get: function () {
            return this._message;
        },
        set: function (value) {
            if (this._message !== value) {
                this._message = value;
                this.notifyPropertyChange('message', value);
            }
        },
        enumerable: true,
        configurable: true
    });
    MainViewModel.prototype.onTap = function () {
        this._counter--;
        this.updateMessage();
        // app.start({ moduleName: '../posts/posts.page' });
    };
    MainViewModel.prototype.updateMessage = function () {
        if (this._counter <= 0) {
            this.message = 'Hoorraaay! You unlocked the NativeScript clicker achievement!';
        }
        else {
            this.message = this._counter + " taps left";
        }
    };
    return MainViewModel;
}(observable_1.Observable));
exports.MainViewModel = MainViewModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi52aWV3LW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi52aWV3LW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSw4Q0FBMkM7QUFTM0M7SUFBbUMsaUNBQVU7SUFnQ3pDO1FBQUEsWUFDSSxpQkFBTyxTQUtWO1FBakNNLGFBQU8sR0FBZTtZQUN6QixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUM5QixFQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM5QixFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM1QixFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUM3QixFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNsQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM1QixFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUM3QixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUM5QixFQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM5QixFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNsQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM1QixFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUM3QixFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNsQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUNqQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtZQUM1QixFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtTQUNoQyxDQUFDO1FBS0UsNkJBQTZCO1FBQzdCLEtBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQzs7SUFDekIsQ0FBQztJQUVELHNCQUFJLGtDQUFPO2FBQVg7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN6QixDQUFDO2FBRUQsVUFBWSxLQUFhO1lBQ3JCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUE7WUFDL0MsQ0FBQztRQUNMLENBQUM7OztPQVBBO0lBU00sNkJBQUssR0FBWjtRQUNJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsb0RBQW9EO0lBQ3hELENBQUM7SUFFTyxxQ0FBYSxHQUFyQjtRQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLCtEQUErRCxDQUFDO1FBQ25GLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxPQUFPLEdBQU0sSUFBSSxDQUFDLFFBQVEsZUFBWSxDQUFDO1FBQ2hELENBQUM7SUFDTCxDQUFDO0lBQ0wsb0JBQUM7QUFBRCxDQUFDLEFBaEVELENBQW1DLHVCQUFVLEdBZ0U1QztBQWhFWSxzQ0FBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAnZGF0YS9vYnNlcnZhYmxlJztcblxuaW1wb3J0ICogYXMgYXBwIGZyb20gJ2FwcGxpY2F0aW9uJztcblxuXG5pbXBvcnQgbGlzdFZpZXdNb2R1bGUgPSByZXF1aXJlKFwidWkvbGlzdC12aWV3XCIpO1xuaW1wb3J0IG9ic2VydmFibGVBcnJheSA9IHJlcXVpcmUoXCJkYXRhL29ic2VydmFibGUtYXJyYXlcIik7XG5pbXBvcnQgbGFiZWxNb2R1bGUgPSByZXF1aXJlKFwidWkvbGFiZWxcIik7XG5cbmV4cG9ydCBjbGFzcyBNYWluVmlld01vZGVsIGV4dGVuZHMgT2JzZXJ2YWJsZSB7XG5cbiAgICBwcml2YXRlIF9jb3VudGVyOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfbWVzc2FnZTogc3RyaW5nO1xuXG4gICAgcHVibGljIG15SXRlbXM6IEFycmF5PGFueT4gPSBbXG4gICAgICAgIHtuYW1lOiAnYXBwbGUnLCBxdWFudGl0eTogNDIgfSxcbiAgICAgICAge25hbWU6ICdiYW5hbmEnLCBxdWFudGl0eTogNyB9LFxuICAgICAgICB7bmFtZTogJ3BpbmVhcHBsZScsIHF1YW50aXR5OiAzIH0sXG4gICAgICAgIHtuYW1lOiAnYXBwcmljb3RlJywgcXVhbnRpdHk6IDkgfSxcbiAgICAgICAge25hbWU6ICdwZWFyJywgcXVhbnRpdHk6IDUgfSxcbiAgICAgICAge25hbWU6ICdwbHVtJywgcXVhbnRpdHk6IDExIH0sXG4gICAgICAgIHtuYW1lOiAnc3RyYXdiZXJyeScsIHF1YW50aXR5OiAxIH0sXG4gICAgICAgIHtuYW1lOiAnYmx1ZWJlcnJ5JywgcXVhbnRpdHk6IDAgfSxcbiAgICAgICAge25hbWU6ICdhcHByaWNvdGUnLCBxdWFudGl0eTogOSB9LFxuICAgICAgICB7bmFtZTogJ3BlYXInLCBxdWFudGl0eTogNSB9LFxuICAgICAgICB7bmFtZTogJ3BsdW0nLCBxdWFudGl0eTogMTEgfSxcbiAgICAgICAge25hbWU6ICdhcHBsZScsIHF1YW50aXR5OiA0MiB9LFxuICAgICAgICB7bmFtZTogJ2JhbmFuYScsIHF1YW50aXR5OiA3IH0sXG4gICAgICAgIHtuYW1lOiAncGluZWFwcGxlJywgcXVhbnRpdHk6IDMgfSxcbiAgICAgICAge25hbWU6ICdzdHJhd2JlcnJ5JywgcXVhbnRpdHk6IDEgfSxcbiAgICAgICAge25hbWU6ICdibHVlYmVycnknLCBxdWFudGl0eTogMCB9LFxuICAgICAgICB7bmFtZTogJ2FwcHJpY290ZScsIHF1YW50aXR5OiA5IH0sXG4gICAgICAgIHtuYW1lOiAncGVhcicsIHF1YW50aXR5OiA1IH0sXG4gICAgICAgIHtuYW1lOiAncGx1bScsIHF1YW50aXR5OiAxMSB9LFxuICAgICAgICB7bmFtZTogJ3N0cmF3YmVycnknLCBxdWFudGl0eTogMSB9LFxuICAgICAgICB7bmFtZTogJ2JsdWViZXJyeScsIHF1YW50aXR5OiAwIH0sXG4gICAgICAgIHtuYW1lOiAnYXBwcmljb3RlJywgcXVhbnRpdHk6IDkgfSxcbiAgICAgICAge25hbWU6ICdwZWFyJywgcXVhbnRpdHk6IDUgfSxcbiAgICAgICAge25hbWU6ICdwbHVtJywgcXVhbnRpdHk6IDExIH1cbiAgICBdO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBkZWZhdWx0IHZhbHVlcy5cbiAgICAgICAgdGhpcy5fY291bnRlciA9IDQyO1xuICAgICAgICB0aGlzLnVwZGF0ZU1lc3NhZ2UoKTtcbiAgICB9XG5cbiAgICBnZXQgbWVzc2FnZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5fbWVzc2FnZTtcbiAgICB9XG4gICAgXG4gICAgc2V0IG1lc3NhZ2UodmFsdWU6IHN0cmluZykge1xuICAgICAgICBpZiAodGhpcy5fbWVzc2FnZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuX21lc3NhZ2UgPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5UHJvcGVydHlDaGFuZ2UoJ21lc3NhZ2UnLCB2YWx1ZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBvblRhcCgpIHtcbiAgICAgICAgdGhpcy5fY291bnRlci0tO1xuICAgICAgICB0aGlzLnVwZGF0ZU1lc3NhZ2UoKTtcbiAgICAgICAgLy8gYXBwLnN0YXJ0KHsgbW9kdWxlTmFtZTogJy4uL3Bvc3RzL3Bvc3RzLnBhZ2UnIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlTWVzc2FnZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2NvdW50ZXIgPD0gMCkge1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gJ0hvb3JyYWFheSEgWW91IHVubG9ja2VkIHRoZSBOYXRpdmVTY3JpcHQgY2xpY2tlciBhY2hpZXZlbWVudCEnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gYCR7dGhpcy5fY291bnRlcn0gdGFwcyBsZWZ0YDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0=